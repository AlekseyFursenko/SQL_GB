CREATE DATABASE IF NOT EXISTS lesson4;
USE lesson4;

CREATE TABLE  AUTO 
(       
	REGNUM VARCHAR(10) PRIMARY KEY, 
	MARK VARCHAR(10), 
	COLOR VARCHAR(15),
	RELEASEDT DATE, 
	PHONENUM VARCHAR(15)
);


CREATE TABLE  CITY 
(	
    CITYCODE INT PRIMARY KEY,
	CITYNAME VARCHAR(50), 
	PEOPLES INT 
);


CREATE TABLE  MAN 
(	
	PHONENUM VARCHAR(15) PRIMARY KEY , 
	FIRSTNAME VARCHAR(50),
	LASTNAME VARCHAR(50),  
	CITYCODE INT, 
	YEAROLD INT	 
);


 -- AUTO
INSERT INTO AUTO (REGNUM, MARK,	COLOR, RELEASEDT, PHONENUM )
VALUES(111114,'LADA', 'КРАСНЫЙ', date'2008-01-01', '9152222221');


INSERT INTO AUTO (REGNUM, MARK,	COLOR, RELEASEDT, PHONENUM )
VALUES(111115,'VOLVO', 'КРАСНЫЙ', date'2013-01-01', '9173333334');


INSERT INTO AUTO (REGNUM, MARK,	COLOR, RELEASEDT, PHONENUM )
VALUES(111116,'BMW', 'СИНИЙ', date'2015-01-01', '9173333334');


INSERT INTO AUTO (REGNUM, MARK,	COLOR, RELEASEDT, PHONENUM )
VALUES(111121,'AUDI', 'СИНИЙ', date'2009-01-01', '9173333332');


INSERT INTO AUTO (REGNUM, MARK,	COLOR, RELEASEDT, PHONENUM )
VALUES(111122,'AUDI', 'СИНИЙ', date'2011-01-01', '9213333336');


INSERT INTO AUTO (REGNUM, MARK,	COLOR, RELEASEDT, PHONENUM )
VALUES(111113,'BMW', 'ЗЕЛЕНЫЙ', date'2007-01-01', '9214444444');


INSERT INTO AUTO (REGNUM, MARK,	COLOR, RELEASEDT, PHONENUM )
VALUES(111126,'LADA', 'ЗЕЛЕНЫЙ', date'2005-01-01', null);


INSERT INTO AUTO (REGNUM, MARK,	COLOR, RELEASEDT, PHONENUM )
VALUES(111117,'BMW', 'СИНИЙ', date'2005-01-01', null);


INSERT INTO AUTO (REGNUM, MARK,	COLOR, RELEASEDT, PHONENUM )
VALUES(111119,'LADA', 'СИНИЙ', date'2017-01-01', 9213333331);


 -- CITY
INSERT INTO CITY (CITYCODE,CITYNAME,PEOPLES)
VALUES(1,'Москва', 10000000);


INSERT INTO CITY (CITYCODE,CITYNAME,PEOPLES)
VALUES(2,'Владимир', 500000);


INSERT INTO CITY (CITYCODE,CITYNAME,PEOPLES)
VALUES(3, 'Орел', 300000);


INSERT INTO CITY (CITYCODE,CITYNAME,PEOPLES)
VALUES(4,'Курск', 200000);


INSERT INTO CITY (CITYCODE,CITYNAME,PEOPLES)
VALUES(5, 'Казань', 2000000);


INSERT INTO CITY (CITYCODE,CITYNAME,PEOPLES)
VALUES(7, 'Котлас', 110000);


INSERT INTO CITY (CITYCODE,CITYNAME,PEOPLES)
VALUES(8, 'Мурманск', 400000);


INSERT INTO CITY (CITYCODE,CITYNAME,PEOPLES)
VALUES(9, 'Ярославль', 500000);

-- MAN
INSERT INTO MAN (PHONENUM,FIRSTNAME,LASTNAME,CITYCODE,YEAROLD)
VALUES('9152222221','Андрей','Николаев', 1, 22);


INSERT INTO MAN (PHONENUM,FIRSTNAME,LASTNAME,CITYCODE,YEAROLD)
VALUES('9152222222','Максим','Москитов', 1, 31);


INSERT INTO MAN (PHONENUM,FIRSTNAME,LASTNAME,CITYCODE,YEAROLD)
VALUES('9153333333','Олег','Денисов', 3, 34);


INSERT INTO MAN (PHONENUM,FIRSTNAME,LASTNAME,CITYCODE,YEAROLD)
VALUES('9173333334','Алиса','Никина', 4, 31);


INSERT INTO MAN (PHONENUM,FIRSTNAME,LASTNAME,CITYCODE,YEAROLD)
VALUES('9173333335','Таня','Иванова', 4, 31);


INSERT INTO MAN (PHONENUM,FIRSTNAME,LASTNAME,CITYCODE,YEAROLD)
VALUES('9213333336','Алексей','Иванов', 7, 25);


INSERT INTO MAN (PHONENUM,FIRSTNAME,LASTNAME,CITYCODE,YEAROLD)
VALUES('9213333331','Андрей','Некрасов', 2, 27);


INSERT INTO MAN (PHONENUM,FIRSTNAME,LASTNAME,CITYCODE,YEAROLD)
VALUES('9213333332','Миша','Рогозин', 2, 21);


INSERT INTO MAN (PHONENUM,FIRSTNAME,LASTNAME,CITYCODE,YEAROLD)
VALUES('9214444444','Алексей','Галкин', 1, 38);

SELECT * FROM auto;

SELECT * FROM city;

SELECT * FROM man;

/*
Задание №1.. Вывести на экран сколько машин каждого цвета для машин марок BMW и LADA
*/

SELECT 
    MARK,
    COLOR,
    COUNT(*) AS QTY 
FROM auto
WHERE MARK = "LADA" OR MARK = "BMW"
GROUP BY COLOR, MARK
ORDER BY MARK;

/*
Задание №2.. Вывести на экран марку авто и количество AUTO не этой марки
*/

SELECT 
    MARK,
    (SELECT COUNT(*) FROM auto) - COUNT(MARK) AS OTHER_MARK_QTY
FROM auto
GROUP BY MARK
ORDER BY MARK;

/*
3. Вывести Марку и цвет автомобиля - имя и фамилию покупателя, для всех покупателей, которые
живут в городе с населением больше 1 млн человек.
*/

SELECT 
    a.MARK AS "Марка авто",
    a.COLOR AS "Цвет авто",
    m.FIRSTNAME AS "Имя владельца",
    m.LASTNAME AS "Фамилия владельца",
    m.CITYNAME AS "Город",
    m.PEOPLES AS "Население"
FROM auto AS a
LEFT JOIN (
    SELECT 
        man.PHONENUM,
        man.FIRSTNAME,
        man.LASTNAME,
        city.CITYNAME,
        city.PEOPLES
    FROM man
    RIGHT JOIN city
    ON man.CITYCODE = city.CITYCODE
) AS m
ON a.PHONENUM = m.PHONENUM
WHERE m.PEOPLES > 1000000;

/*
4. Вывести на экран людей которые живут в городах с населением больше 1000000 , если людей с
таким же именем нет в таблице MAN
*/

SELECT cman.* FROM 
    (SELECT man.*, city.CITYNAME, city.PEOPLES FROM man
    JOIN city
    ON man.CITYCODE = city.CITYCODE
    WHERE PEOPLES > 1000000) AS cman
RIGHT JOIN(
    SELECT FIRSTNAME, COUNT(FIRSTNAME) AS qty
    FROM man
    GROUP BY FIRSTNAME
    HAVING qty = 1) AS qtynms
ON cman.FIRSTNAME = qtynms.FIRSTNAME
WHERE cman.FIRSTNAME IS NOT NULL;

/*
Задание №3.
Даны 2 таблицы, созданные следующим образом:
*/

CREATE TABLE test_a (id INT, data VARCHAR(1));
CREATE TABLE test_b (id INT);

INSERT INTO test_a (id, data) VALUES
(10, 'A'),
(20, 'A'),
(30, 'F'),
(40, 'D'),
(50, 'C');

INSERT INTO test_b (id) VALUES
(10),
(30),
(50);

SELECT * FROM test_a;
SELECT * FROM test_b;
/*
 Напишите запрос, который вернет строки из таблицы test_a,
 id которых нет в таблице test_b, НЕ используя ключевого слова NOT.
 */

SELECT a.id, a.data FROM test_a AS a
LEFT JOIN test_b AS b
ON a.id = b.id
WHERE b.id IS NULL;

/*
 Необходимо преобразовать поля таблицы к типу DATETIME, сохранив введеные ранее значения.
*/

CREATE TABLE IF NOT EXISTS orders (
onum INT NOT NULL,
amt DECIMAL(7,2) NOT NULL,
odate VARCHAR(10) NOT NULL,
cnum INT,
snum INT,
PRIMARY KEY (onum)
);

INSERT INTO orders(onum, amt, odate, cnum, snum)
VALUES
(3001, 18.69, '10/03/1990', 2008, 1007),
(3003, 767.19, '10/03/1990', 2001, 1001),
(3002, 1900.10, '10/03/1990', 2007, 1004),
(3005, 5160.45, '10/03/1990', 2003, 1002),
(3006, 1098.16, '10/03/1990', 2008, 1007),
(3009, 1713.23, '10/04/1990', 2002, 1003),
(3007, 75.75, '10/04/1990', 2004, 1002),
(3008, 4723.00, '10/05/1990', 2006, 1001),
(3010, 1309.95, '10/06/1990', 2004, 1002),
(3011, 9891.88, '10/06/1990', 2006, 1001);

SELECT * FROM orders;

-- Вариант парсинка даты
UPDATE orders
SET odate = 
    CONCAT_WS(
        '-',
        SUBSTRING_INDEX(odate, '/', -1),
        SUBSTRING(odate, 4, 2),
        SUBSTRING_INDEX(odate, '/', 1)
);

-- Вариант со STR_TO_DATE
UPDATE orders
SET odate = STR_TO_DATE(odate, '%d/%m/%Y');

ALTER TABLE orders
MODIFY COLUMN odate DATE NOT NULL;

DESCRIBE orders;